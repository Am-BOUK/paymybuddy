/**
 * 
 */
package pay.my.buddy.repository;

import static org.assertj.core.api.Assertions.assertThat;
import static org.junit.jupiter.api.Assertions.*;

import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase;
import org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase.Replace;
import org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest;
import org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManager;
import org.springframework.test.annotation.Rollback;

import pay.my.buddy.dal.ClientRepository;
import pay.my.buddy.entities.Client;

/**
 * a basic test class for testing Spring Data JPA repository
 */
@DataJpaTest
/**
 * Configured to work with the actual database
 */
@AutoConfigureTestDatabase(replace = Replace.NONE)
/**
 * commit the changes
 */
@Rollback(false)
public class ClientRepositoryTest {

	/**
	 * a wrapper of JPA's entityManager
	 * we can use it in test class like a standard
	 */
	@Autowired
	private TestEntityManager entityManager;
	
	@Autowired
	private ClientRepository clientRepository;
	
	
	@Test
	void testCreateClient() {
		Client client = new Client();
		client.setFirstName("FirstName");
		client.setLastName("LASTNAME");
		client.setEmail("firstName@gmail.com");
		client.setPassword("firstName123");
		
		Client savedClient = clientRepository.save(client);
		Client existClient = entityManager.find(Client.class, savedClient);
		
		assertThat(client.getEmail()).isEqualTo(existClient.getEmail());
	}

}
